version: "3.7"
services:
    app:
        build:
            args:
                USER_ID: 1000
                GROUP_ID: 1000
            context: ./
            dockerfile: ./docker/php.dockerfile
        container_name: innoscripta-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - innoscripta-network

    db:
        image: mysql:8
        container_name: innoscripta-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        tty: true
        ports:
            - 3307:3306
        volumes:
            - ./.docker/mysql:/var/lib/mysql
        networks:
            - innoscripta-network

    nginx:
        image: nginx:alpine
        container_name: innoscripta-nginx
        restart: unless-stopped
        ports:
            - 8080:80
        volumes:
            - ./:/var/www
            - ./docker/nginx:/etc/nginx/conf.d
            - .docker/nginx/logs:/var/log/nginx
            - .docker/nginx/cache:/var/cache/nginx
            - .docker/nginx/run:/var/run
        networks:
            - innoscripta-network

    redis:
        image: redis:7-alpine
        container_name: innoscripta-redis
        tty: true
        networks:
            - innoscripta-network

    front:
        image: node:alpine
        container_name: innoscripta-front
        working_dir: /var/www/html
        tty: true
        ports:
            - 3000:3000
        volumes:
            - ./:/var/www/html
        networks:
            - innoscripta-network

networks:
    innoscripta-network:
        driver: bridge
